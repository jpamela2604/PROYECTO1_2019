package g_gxml;
import java.io.*;
import java_cup.runtime.*;
import java.util.LinkedList;
import errors.mng_error;
import proyecto1.var;
import codigo_gxml.*;
parser code
{:

public etiqueta raiz;
public mng_error e = new mng_error();
public void syntax_error(Symbol s){
        e.AddError("No se esperaba "+s.value,(s.left+1),(s.right+1),var.archivo,"SINTACTICO"); 
}
             
public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
       e.AddError("No se esperaba "+s.value,(s.left+1),(s.right+1),var.archivo,"SINTACTICO"); ;
}
:}
action code
{:
      
:}
terminal   String i_imp,f_imp,mayor,i_ven,f_ven,tipo,color,ac_in,ac_fi,is,
            i_control,f_control,i_defecto,f_defecto,i_lista,f_lista,i_dato,f_dato,referencia,
            accion,nombre,x,y,alto,ancho,fuente,tam,negrita,cursiva,maximo,minimo,autoplay,path,
            i_multi,f_multi,i_boton,i_enviar,f_boton,f_enviar,i_texto,f_texto,i_contenedor,f_contenedor,
            borde
            ;
terminal   String id, all,call
            ;
terminal   String er_entero,er_cadena,verdadero,falso
            ;
nonterminal etiqueta S,LIMP,ETIQUETA,VEN,CONTROL,LISTADATOS,MULTIMEDIA,BOTON,ENVIAR,TEXTO,CONTE,DEFECTO
            ;
nonterminal e_dato DATO
            ;
nonterminal ruta IMP
            ;
nonterminal Boolean BOL
            ;
nonterminal elemento ELEMENTO,REFE
            ;
nonterminal LinkedList<elemento> ELEMENTOS
            ;

nonterminal etiqueta OPC_CTRL;
nonterminal LinkedList<etiqueta> ETIQUETAS,VENTANAS,LCONTE,OPCS_CTRL;
nonterminal LinkedList<e_dato> DATOS
            ;
start with S;
S ::=           LIMP:n1
                {:
                    System.out.println("aceptada");
                    raiz=new e_xml(n1,new LinkedList());
                :}
                |LIMP:n1 VENTANAS:n2
                {:
                    System.out.println("aceptada");
                    raiz=new e_xml(n1,n2);
                :}
                |VENTANAS:n1
                {:
                    System.out.println("aceptada");
                    raiz=new e_xml(new e_Importar(),n1);
                :}
                ;
VENTANAS::=     VENTANAS:n1 VEN:n2
                {:
                    RESULT=n1;
                    n1.add(n2);
                :}
                |VEN:n1
                {:
                    RESULT=new LinkedList();
                    RESULT.add(n1);
                :}
                ;
LIMP::=         LIMP:n1 IMP:n2
                {:
                    e_Importar a=(e_Importar)n1;
                    a.rutas.add(n2);
                    RESULT=a;                
                :}
                |IMP:n1
                {:
                    RESULT=new e_Importar(n1);
                :}
                ;
IMP ::=         i_imp  all:n1 f_imp 
                {:
                    RESULT=new ruta(n1,(n1left+1),(n1right+1),var.archivo);
                :}
                ;
VEN ::=         i_ven:n0 ELEMENTOS:n1 mayor LCONTE:n2 f_ven mayor
                {:
                    RESULT=new e_ventana(n1,n2,(n0left+1),(n0right+1),var.archivo);
                :}
                |i_ven:n0 ELEMENTOS:n1 mayor  f_ven mayor
                {:
                    RESULT=new e_ventana(n1,new LinkedList(),(n0left+1),(n0right+1),var.archivo);
                :}
                |i_ven:n0  mayor LCONTE:n2 f_ven mayor
                {:
                    RESULT=new e_ventana(new LinkedList(),n2,(n0left+1),(n0right+1),var.archivo);
                :}
                |i_ven:n0  mayor  f_ven mayor
                {:
                    RESULT=new e_ventana(new LinkedList(),new LinkedList(),(n0left+1),(n0right+1),var.archivo);
                :}
                ;
LCONTE::=       LCONTE:n1 CONTE:n2
                {:
                    RESULT=n1;
                    n1.add(n2);
                :}
                |CONTE:n1
                {:
                    RESULT=new LinkedList();
                    RESULT.add(n1);
                :}
                ;
CONTE::=        i_contenedor:n0 ELEMENTOS:n1 mayor ETIQUETAS:n2 f_contenedor mayor
                {:
                    RESULT=new e_contenedor(n1,n2,(n0left+1),(n0right+1),var.archivo);
                :}
                |i_contenedor:n0 ELEMENTOS:n1 mayor  f_contenedor mayor
                {:
                    RESULT=new e_contenedor(n1,new LinkedList(),(n0left+1),(n0right+1),var.archivo);
                :}
                |i_contenedor:n0  mayor ETIQUETAS:n2 f_contenedor mayor
                {:
                    RESULT=new e_contenedor(new LinkedList(),n2,(n0left+1),(n0right+1),var.archivo);
                :}
                |i_contenedor:n0 mayor  f_contenedor mayor
                {:
                    RESULT=new e_contenedor(new LinkedList(),new LinkedList(),(n0left+1),(n0right+1),var.archivo);
                :}
                ;
ETIQUETAS::=    ETIQUETAS:n1 ETIQUETA:n2
                {:
                    RESULT=n1;
                    n1.add(n2);
                :}
                |ETIQUETA:n1
                {:
                    RESULT=new LinkedList();
                    RESULT.add(n1);
                :}
                ;
ETIQUETA::=     CONTROL:n1
                {:
                    RESULT=n1;
                :}
                |MULTIMEDIA:n1
                {:
                    RESULT=n1;
                :}
                |BOTON:n1
                {:
                    RESULT=n1;
                :}
                |ENVIAR:n1
                {:
                    RESULT=n1;
                :}
                |TEXTO:n1
                {:
                    RESULT=n1;
                :}
                ;
MULTIMEDIA::=   i_multi:n0 ELEMENTOS:n1 mayor f_multi mayor
                {:
                    RESULT=new e_multimedia(n1,(n0left+1),(n0right+1),var.archivo);
                :}
                |i_multi:n0  mayor f_multi mayor
                {:
                    RESULT=new e_multimedia(new LinkedList(),(n0left+1),(n0right+1),var.archivo);
                :}
                ;
TEXTO::=        i_texto:n0 ELEMENTOS:n1  all:n2 f_texto 
                {:
                    RESULT=new e_texto(n1,n2,(n0left+1),(n0right+1),var.archivo);
                :}
                |i_texto:n0   all:n2 f_texto 
                {:
                    RESULT=new e_texto(new LinkedList(),n2,(n0left+1),(n0right+1),var.archivo);
                :}
                ;
BOTON::=        i_boton:n0 ELEMENTOS:n1  all:n2 f_boton 
                {:
                     RESULT=new e_boton(n1,n2,(n0left+1),(n0right+1),var.archivo);
                :}
                | i_boton:n0   all:n2 f_boton 
                {:
                    RESULT=new e_boton(new LinkedList(),n2,(n0left+1),(n0right+1),var.archivo);
                :}
                ;
ENVIAR::=        i_enviar:n0 ELEMENTOS:n1  all:n2 f_enviar 
                {:
                    RESULT=new e_enviar(n1,n2,(n0left+1),(n0right+1),var.archivo);
                :}
                | i_enviar:n0   all:n2 f_enviar 
                {:
                    RESULT=new e_enviar(new LinkedList(),n2,(n0left+1),(n0right+1),var.archivo);
                :}
                ;
LISTADATOS::=   i_lista:n0 ELEMENTOS:n1 mayor DATOS:n2 f_lista mayor
                {:
                    RESULT=new e_listaDato(n1,n2,(n0left+1),(n0right+1),var.archivo);
                :}
                |i_lista:n0  mayor DATOS:n2 f_lista mayor
                {:
                    RESULT=new e_listaDato(null,n2,(n0left+1),(n0right+1),var.archivo);
                :}
                |i_lista:n0 ELEMENTOS:n1 mayor  f_lista mayor
                {:
                    RESULT=new e_listaDato(n1,new LinkedList(),(n0left+1),(n0right+1),var.archivo);
                :}
                |i_lista:n0  mayor  f_lista mayor
                {:
                    RESULT=new e_listaDato(null,new LinkedList(),(n0left+1),(n0right+1),var.archivo);
                :}
                ;

DATOS::=        DATOS:n1 DATO:n2
                {:
                    RESULT=n1;
                    n1.add(n2);
                :}
                |DATO:n1
                {:
                    RESULT=new LinkedList();
                    RESULT.add(n1);
                :}
                ;
DATO::=         i_dato:n0 ELEMENTOS:n1  all:n2 f_dato 
                {:                    
                    RESULT=new e_dato(n1,n2,(n0left+1),(n0right+1),var.archivo);
                :}
                |i_dato:n0  all:n2 f_dato 
                {:
                    RESULT=new e_dato(new LinkedList(),n2,(n0left+1),(n0right+1),var.archivo);
                :}
                ;
REFE::=          referencia:n1 is er_cadena:n2
                {:
                    RESULT=new elemento(var.referencia,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                ;
CONTROL::=      i_control:n0 ELEMENTOS:n1 mayor OPCS_CTRL:n2 f_control mayor
                {:
                    RESULT=new e_control(n1,n2,(n0left+1),(n0right+1),var.archivo);
                :}
                |i_control:n0 ELEMENTOS:n1 mayor  f_control mayor
                {:
                    RESULT=new e_control(n1,new LinkedList(),(n0left+1),(n0right+1),var.archivo);
                :}
                ;
OPCS_CTRL::=    OPCS_CTRL:n1 OPC_CTRL:n2
                {:
                    RESULT=n1;
                    n1.add(n2);
                :}
                |OPC_CTRL:n1
                {:
                    RESULT=new LinkedList();
                    RESULT.add(n1);
                :}
                ;
OPC_CTRL::=     DEFECTO:n1
                {:
                    RESULT=n1;
                :}
                |LISTADATOS:n1
                {:
                    RESULT=n1;
                :}
                ;
DEFECTO::=      i_defecto:n1  all:n2 f_defecto 
                {:
                    RESULT=new e_defecto(n2,(n1left+1),(n1right+1),var.archivo);
                :}
                ;
ELEMENTOS::=    ELEMENTOS:n1 ELEMENTO:n2
                {:
                    RESULT=n1;
                    n1.add(n2);
                :}
                |ELEMENTO:n1
                {:
                    RESULT=new LinkedList();
                    RESULT.add(n1);
                :}
                ;
ELEMENTO::=     id:n1 is er_cadena:n2
                {:
                    RESULT=new elemento(var.id,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |tipo:n1 is er_cadena:n2
                {:
                    RESULT=new elemento(var.tipo,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |color:n1 is er_cadena:n2
                {:
                    RESULT=new elemento(var.color,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |ac_in:n1 is call:n2
                {:
                    RESULT=new elemento(var.accionInicial,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |ac_fi:n1 is call:n2
                {:
                    RESULT=new elemento(var.accionFinal,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                
                |x:n1 is er_entero:n2
                {:
                    RESULT=new elemento(var.x,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |y:n1 is er_entero:n2
                {:
                    RESULT=new elemento(var.y,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |nombre:n1 is er_cadena:n2
                {:
                    RESULT=new elemento(var.nombre,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |alto:n1 is er_entero:n2
                {:
                    RESULT=new elemento(var.alto,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |ancho:n1 is er_entero:n2
                {:
                    RESULT=new elemento(var.ancho,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |fuente:n1 is er_cadena:n2
                {:
                    RESULT=new elemento(var.fuente,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |tam:n1 is er_entero:n2
                {:
                    RESULT=new elemento(var.tam,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |negrita:n1 is BOL:n2
                {:
                    RESULT=new elemento(var.negrita,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |cursiva:n1 is BOL:n2
                {:
                    RESULT=new elemento(var.cursiva,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |borde:n1 is BOL:n2
                {:
                    RESULT=new elemento(var.borde,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |maximo:n1 is er_entero:n2
                {:
                    RESULT=new elemento(var.maximo,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |minimo:n1 is er_entero:n2
                {:
                    RESULT=new elemento(var.minimo,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |REFE:n1
                {:
                        RESULT=n1;
                :}
                |autoplay:n1 is BOL:n2
                {:
                    RESULT=new elemento(var.autoplay,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |path:n1 is er_cadena:n2
                {:
                    RESULT=new elemento(var.path,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                |accion:n1 is call:n2
                {:
                    RESULT=new elemento(var.accion,n2,(n1left+1),(n1right+1),var.archivo);
                :}
                ;
BOL ::=         verdadero
                {:
                    RESULT=true;
                :}
                |falso
                {:
                    RESULT=false;
                :}
                ;